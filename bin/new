#! /bin/sh -eu

me=$0
medir=`dirname "$me"`

displayHelpMessage () {
    cat >&2 <<EOF

$0 <package_name> <ClassName>

EOF
}

${1+:} false || {
    displayHelpMessage

    exit 2
}

${2+:} false || {
    displayHelpMessage

    exit 2
}

pkgdir=`realpath "${medir}/.."`
srcdir="${pkgdir}/src"
testsdir="${pkgdir}/tests"

defaultpkgname=acme
defaultclassname=Acme
codefileext=java
GIT=git
SED=sed

pkgname=$1
classname=$2

createNewBranch ()
{
    checkWorkingTree

    nowday=`date '+%F_%T' | tr : -`

    git checkout -b "${nowday}_${pkgname}"
}

configurePackageName ()
{
    sed -i "s/${defaultpkgname}/${pkgname}/" \
        "${pkgdir}/pom.xml" \
        "${testsdir}/${defaultclassname}Test.${codefileext}"
}

configureClassName ()
{
    sed -i "s/${defaultclassname}/${classname}/" \
        "${testsdir}/${defaultclassname}Test.${codefileext}"

    mkdir -p "${testsdir}/${pkgname}"
    git mv "${testsdir}/${defaultclassname}Test.${codefileext}" \
       "${testsdir}/${pkgname}/${classname}Test.${codefileext}"

    mkdir -p "${srcdir}/${pkgname}"
    git mv "${srcdir}/.gitkeep" "${srcdir}/${pkgname}"
}

removeSkeletonArtefact ()
{
    git rm $me
}

commit ()
{
    git add \
        "${pkgdir}/pom.xml" \
        "${srcdir}" \
        "${testsdir}"

    git commit -pm"Add ${pkgname}"
}

checkWorkingTree()
{
    ${GIT} update-index --refresh > /dev/null || :

    test x = x"`${GIT} diff-index --name-only HEAD --`" || {
        echo >&2
        echo >&2 '    The working tree is dirty.'
        echo >&2 '    Please stash or deal with modifications to proceed:'
        echo >&2
        {
            ${GIT} diff-index --name-only HEAD -- | ${SED} -e 's,^,        ,'
        } >&2
        echo >&2

        return 3
    }
}

createNewBranch

configurePackageName ${pkgname}
configureClassName ${classname}

removeSkeletonArtefact
commit

echo
echo "Open ${testsdir}/${classname}.${codefileext}"
echo
echo "And start coding"
echo
